Способы реализации ACID:
ARIES (Algorithms for recovery and Isolation Exploiting Semantics)
MVCC (MultiVersion Concurrency Control)

Масштабирование:
Вертикальное - за счёт увеличения ресурсов на машине
Горизонтальное - за счёт увеличения количества машин

Теорема CAP
Consistency - на всех узлах одинаковые данные
Availability - любой работающий узел всегда выполнит запрос на чтение и на запись
Partition Tolerance - система продолжает работать, несмотря на отсутствие связи между узлами

CA - не принимаем запросы при разрыве соединений между узлами (почти все реляционные БД)
CP - разрешаем чтение, запрещаем запись при разрыве
AP - разрешено чтение и запись, но данные на узлах будут отличаться (к примеру DNS)

CAP теорема работает только на кластере узлов

Mongo скорее CP (но можно настроить по другому)

BaSE архитектура
Base Availability - всегда отвечает на зпрос, но могут быть несогласованные данные
Soft-state - состояние системы может измениться в любой момент (в любое Увремя данные могут приводиться в согласованное состояние)
Eventual consistency - система придет в согласованное состояние, если данные не будут меняться

Алгоритмы BaSE:
CP. PAXOS - семейство алгоритмов. Основной недостаток это помехи в среде передачи даннхы. Любой узел может принимать
изменения. Двухфазный коммит.
CP. Raft - улучшенный PAXOS. Работает по системе лидер-фоловер.
AP. Gossip - алгоритм схож с распространением эпидемий. С заданной частотой каждый узел сети выбирает случайный другой узел
и передает ему информацию.